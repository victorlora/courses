#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len ints to dst.
# Return the number of positive ints (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
ncopy:	pushl %ebp		# Save old frame pointer
	rrmovl %esp,%ebp	# Set up new frame pointer
	pushl %esi		# Save callee-save regs
	pushl %ebx
	pushl %edi
	mrmovl 8(%ebp),%ebx	# src
	mrmovl 16(%ebp),%edx	# len
	mrmovl 12(%ebp),%ecx	# dst

##################################################################
# You can modify this portion
	# Loop header
	xorl %eax,%eax		# count = 0;
	andl %edx,%edx		# len <= 0?
	#jle Done		# if so, goto Done:
	jmp Npos
	
Pos7:	mrmovl 24(%ebx), %esi	# read val from src...
	rmmovl %esi, 24(%ecx)	# ...and store it to dst
	andl %esi, %esi
        iaddl $-1, %edx		# val <= 0?
	jle Pos6		# if so, goto Npos:
	iaddl  $1, %eax		# count++

Pos6:	mrmovl 20(%ebx), %edi
	rmmovl %edi, 20(%ecx)
	andl %edi, %edi
        iaddl $-1, %edx
	jle Pos5
	iaddl $1, %eax

Pos5:	mrmovl 16(%ebx), %esi
	rmmovl %esi, 16(%ecx)
	andl %esi, %esi
        iaddl $-1, %edx
	jle Pos4
	iaddl $1, %eax

Pos4:   mrmovl 12(%ebx), %edi
        rmmovl %edi, 12(%ecx)
        andl %edi, %edi
        iaddl $-1, %edx
        jle Pos3
        iaddl $1, %eax

Pos3:   mrmovl 8(%ebx), %esi
        rmmovl %esi, 8(%ecx)
        andl %esi, %esi
        iaddl $-1, %edx
        jle Pos2
        iaddl $1, %eax

Pos2:   mrmovl 4(%ebx), %edi
        rmmovl %edi, 4(%ecx)
        andl %edi, %edi
        iaddl $-1, %edx
        jle Pos1
        iaddl $1, %eax

Pos1:   mrmovl (%ebx), %esi
        rmmovl %esi, (%ecx)
        andl %esi, %esi
        iaddl $-1, %edx
	jle Npos
        iaddl $1, %eax

Npos:	
	andl %edx, %edx
	je Done			
	irmovl $7, %edi
	andl %edi, %edx
	jge Pos7
	irmovl $6, %edi
        andl %edi, %edx
        jge Pos6
	irmovl $5, %edi
        andl %edi, %edx
        jge Pos5
	irmovl $4, %edi
        andl %edi, %edx
        jge Pos4
	irmovl $3, %edi
        andl %edi, %edx
        jge Pos3
	irmovl $2, %edi
        andl %edi, %edx
        jge Pos2
	irmovl $1, %edi
        andl %edi, %edx
        jge Pos1
	
	
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	popl %edi               # Restore callee-save registers
	popl %ebx
	popl %esi
	leave			# replaces rrmovl and popl
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
